## id: 1
## label: define statement
## program:
x := 12
## tokens:
1:1     IDENT       x
1:3     :=
1:6     DECINT      12
1:8     TERM
1:8     EOF
## end

## id: 2
## label: assign statement
## program:
x = 0
## tokens:
1:1     IDENT       x
1:3     =
1:5     DECINT      0
1:6     TERM
1:6     EOF
## end

## id: 3
## label: function call (no args)
## program:
print()
## tokens:
1:1     IDENT       print
1:6     (
1:7     )
1:8     TERM
1:8     EOF
## end

## id: 4
## label: function call (string literal arg)
## program:
print("Hello, world!")
## tokens:
1:1     IDENT       print
1:6     (
1:7     STR         "Hello, world!"
1:22    )
1:23    TERM
1:23    EOF
## end

## id: 5
## label: empty program
## program:

## tokens:
1:1     EOF
## end

## id: 6
## label: decimal integer
## program:
325290
## tokens:
1:1     DECINT      325290
1:7     EOF
## end

## id: 7
## label: decimal float
## program:
325.290
## tokens:
1:1     DECFLT      325.290
1:8     EOF
## end

## id: 8
## label: loop with function call
## program:
loop 45 {
    println()
}
## tokens:
1:1     loop
1:6     DECINT      45
1:9     {
2:5     IDENT       println
2:12    (
2:13    )
2:14    TERM
3:1     }
3:2     EOF
## end

## id: 9
## label: function definition
## program:
fn add(a, b i32) i32 {
    return a + b
}
## tokens:
1:1     fn
1:4     IDENT       add
1:7     (
1:8     IDENT       a
1:9     ,
1:11    IDENT       b
1:13    IDENT       i32
1:16    )
1:18    IDENT       i32
1:22    {
2:5     return
2:12    IDENT       a
2:14    +
2:16    IDENT       b
2:17    TERM
3:1     }
3:2     EOF
## end